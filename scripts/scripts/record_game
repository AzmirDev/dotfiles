#!/usr/bin/env bash
# record_game.sh - Record gameplay with ffmpeg
# Usage:
#   ./record_game.sh [mic]
# Saves to: ~/Videos/recording/<date>/recording_<time>.mkv

WITH_MIC="$1"

# Set up output directory
DATE=$(date +"%Y-%m-%d")
TIME=$(date +"%H-%M-%S")
OUTPUT_DIR="$HOME/Videos/recording/$DATE"
mkdir -p "$OUTPUT_DIR"
OUTPUT_FILE="$OUTPUT_DIR/recording_${TIME}.mkv"

# Detect default audio sink (system audio)
SYSTEM_AUDIO=$(pactl get-default-sink)

# Detect microphone source
MIC_SOURCE=$(pactl get-default-source)

# Detect current screen resolution from xrandr
SCREEN_SIZE=$(xrandr | awk '/\*/ {print $1; exit}')
FPS=60  # You can make this dynamic if needed

# Base ffmpeg command for screen + system audio
CMD=(
    ffmpeg
    -video_size "$SCREEN_SIZE"
    -framerate "$FPS"
    -f x11grab -i :0.0
    -f pulse -i "$SYSTEM_AUDIO.monitor"
)

# Add mic if requested
if [[ "$WITH_MIC" == "mic" ]]; then
    CMD+=(-f pulse -i "$MIC_SOURCE" \
          -filter_complex "[1:a][2:a]amix=inputs=2:duration=longest" \
          -map 0:v -map "[a]")
else
    CMD+=(-map 0:v -map 1:a)
fi

# Encoding settings
CMD+=(
    -c:v libx264 -preset ultrafast -crf 18
    -c:a aac -b:a 192k
    "$OUTPUT_FILE"
)

# Run the command
echo "Recording to $OUTPUT_FILE (mic: $WITH_MIC)"
"${CMD[@]}"
